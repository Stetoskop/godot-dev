[gd_scene load_steps=2 format=3 uid="uid://r8pqeqejkd7t"]

[sub_resource type="GDScript" id="GDScript_vsb4k"]
resource_name = "MultiplayerController"
script/source = "extends Control

@export var address = \"127.0.0.1\"
@export var port = 8910
@export var max_clients = 2
var peer

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	multiplayer.peer_connected.connect(peer_connected)
	multiplayer.peer_disconnected.connect(peer_disconnected)
	multiplayer.connected_to_server.disconnect(connected_to_server)
	multiplayer.connection_failed.disconnect(connection_failed)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass

# Gets called on the server and clients
func peer_connected(id):
	print(\"Player Connected \" + str(id))

# Gets called on the server and clients
func peer_disconnected(id):
	print(\"Player Disconnected \" + str(id))

# Gets called only from client
func connected_to_server(id):
	print(\"Connected To Server\")
	SendPlayerInformation.rpc_id(1, $LineEdit.text, multiplayer.get_unique_id())

# Gets called only from client
func connection_failed(id):
	print(\"Connection Failed\")
	
@rpc(\"any_peer\",\"call_local\")
func SendPlayerInformation(name, id):
	if !GameManager.Players.has(id):
		GameManager.Players[id] = {
			\"name\": name,
			\"id\": id,
			\"score\": 0
		}
	if multiplayer.is_server():
		for i in GameManager.Players:
			SendPlayerInformation.rpc(GameManager.Players[i].name, i)

@rpc(\"any_peer\",\"call_local\")
func StartGame():
	var scene = load(\"res://main2d.tscn\").instantiate()
	get_tree().root.add_child(scene)
	self.hide()

func _on_host_button_down() -> void:
	peer = ENetMultiplayerPeer.new()
	var error = peer.create_server(port, max_clients)
	if error != OK:
		print(\"Cannot host: \" + str(error))
		return
	peer.get_host().compress(ENetConnection.COMPRESS_RANGE_CODER)
	pass
	
	multiplayer.set_multiplayer_peer(peer)
	print(\"Waiting for players...\")
	pass

func _on_join_button_down() -> void:
	peer = ENetMultiplayerPeer.new()
	peer.create_client(address, port)
	peer.get_host().compress(ENetConnection.COMPRESS_RANGE_CODER)
	multiplayer.set_multiplayer_peer(peer)
	pass
	
func _on_start_game_button_down() -> void:
	StartGame.rpc()
	pass
"

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_vsb4k")

[node name="Host" type="Button" parent="."]
layout_mode = 0
offset_left = 64.0
offset_top = 192.0
offset_right = 255.0
offset_bottom = 321.0
scale = Vector2(1.00519, 0.99288)
text = "Host"

[node name="Join" type="Button" parent="."]
layout_mode = 0
offset_left = 264.0
offset_top = 192.0
offset_right = 456.0
offset_bottom = 320.0
text = "Join"

[node name="StartGame" type="Button" parent="."]
layout_mode = 0
offset_left = 464.0
offset_top = 192.0
offset_right = 656.0
offset_bottom = 320.0
text = "Start Game"

[node name="LineEdit" type="LineEdit" parent="."]
layout_mode = 0
offset_left = 128.0
offset_top = 128.0
offset_right = 512.0
offset_bottom = 160.0

[node name="Label" type="Label" parent="."]
layout_mode = 0
offset_left = 64.0
offset_top = 128.0
offset_right = 111.0
offset_bottom = 151.0
text = "Name"

[connection signal="button_down" from="Host" to="." method="_on_host_button_down"]
[connection signal="button_down" from="Join" to="." method="_on_join_button_down"]
[connection signal="button_down" from="StartGame" to="." method="_on_start_game_button_down"]
